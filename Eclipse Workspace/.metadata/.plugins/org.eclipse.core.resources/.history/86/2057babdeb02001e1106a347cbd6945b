package controller;

import java.net.URL;
import java.util.ResourceBundle;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;

import javafx.scene.control.TextArea;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URL;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.ZoneId;
import java.util.ResourceBundle;

import application.ConnexionMysql;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.image.ImageView;
import models.Agenda;
import models.Patients;
import javafx.stage.*;
import javafx.stage.FileChooser.ExtensionFilter;
import javafx.scene.image.Image;
import java.io.ByteArrayInputStream;


public class GererAgendaController implements Initializable {
	
	Connection cnx;
    public PreparedStatement st;
    public ResultSet result ;

	    @FXML
	    private DatePicker DatePicker;

	    @FXML
	    private TableView<Agenda> table_agenda;
	    
	    @FXML
	    private TableColumn<Agenda, Integer> cln_id;

	    @FXML
	    private TableColumn<Agenda, String> cln_nom;

	    @FXML
	    private TableColumn<Agenda, String> cln_prenom;

	    @FXML
	    private TableColumn<Agenda, String> cln_tel;

	    @FXML
	    private TableColumn<Agenda, String> cln_heure;

	    @FXML
	    private TableColumn<Agenda, Date> cln_date;

	    @FXML
	    private DatePicker txt_search;

	    @FXML
	    private TextField txt_nom;

	    @FXML
	    private TextField txt_prenom;

	    @FXML
	    private TextField txt_tel;

	    @FXML
	    private TextField txt_heure;
	    
	    public ObservableList<Agenda> data = FXCollections.observableArrayList();
	    

	    @FXML
	    void ajouetrA(MouseEvent event) {
	    	String nom =txt_nom.getText();
	    	String prenom =txt_prenom.getText();
	    	String tel =txt_tel.getText();
	    	String heure =txt_heure.getText();
	    	
	    	String sql="insert into agenda(nom,prenom,numTel,dateR,heure) values(?,?,?,?,?)";
	    	if(!nom.equals("")&&!prenom.equals("")&&!tel.equals("")&&!heure.equals("")&&!DatePicker.getValue().equals(null)) {
	    		try {
					st=cnx.prepareStatement(sql);
					st.setString(1, nom);
					java.util.Date date =java.util.Date.from(DatePicker.getValue().atStartOfDay(ZoneId.systemDefault()).toInstant());
					Date sqlDate = new Date(date.getTime());
					st.setDate(4, sqlDate);
					st.setString(2, prenom);
					st.setString(3, tel);
					st.setString(5, heure);
					st.execute();
					txt_nom.setText("");
				    txt_prenom.setText("");
				    txt_tel.setText("");
				    txt_heure.setText("");
				    DatePicker.setValue(null);
				    Alert alert = new Alert(AlertType.CONFIRMATION,"rendez_vous ajouté avec succès!",javafx.scene.control.ButtonType.OK);
				    alert.showAndWait();
				    showPatients();
				} catch (SQLException e) {
					e.printStackTrace();
				} catch (FileNotFoundException e) {
					e.printStackTrace();
				}
	    	} else {
	    		Alert alert = new Alert(AlertType.WARNING,"veuillez remplir tous les champs!",javafx.scene.control.ButtonType.OK);
			    alert.showAndWait();
	    	}

	    }

	    @FXML
	    void modifierA(MouseEvent event) {

	    }

	    @FXML
	    void searchA(MouseEvent event) {

	    }

	    @FXML
	    void supprimerA(MouseEvent event) {

	    }
	    
	    public void showAgenda() {
	    	table_agenda.getItems().clear();
	    	String sql ="select * from agenda";
	        try {
				st=cnx.prepareStatement(sql);
				result=st.executeQuery();
				while(result.next()) {
					data.add(new Agenda(result.getInt("idA"),result.getString("nom"),result.getString("prenom"),result.getDate("numTel"),result.getString("dateR"),result.getString("heure")));
				}
			} catch (SQLException e) {

				e.printStackTrace();
			}
	        
	        cln_id.setCellValueFactory(new PropertyValueFactory<Patients, Integer>("id"));
	        cln_nom.setCellValueFactory(new PropertyValueFactory<Patients, String>("nom"));
	        cln_prenom.setCellValueFactory(new PropertyValueFactory<Patients, String>("prenom"));
	        cln_dateN.setCellValueFactory(new PropertyValueFactory<Patients, Date>("dateNais"));
	        cln_age.setCellValueFactory(new PropertyValueFactory<Patients, String>("age"));
	        cln_adresse.setCellValueFactory(new PropertyValueFactory<Patients, String>("adresse"));
	        cln_tel.setCellValueFactory(new PropertyValueFactory<Patients, String>("tel"));
	        table_patients.setItems(data);
	        
	    }
	    



	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
	}

}
